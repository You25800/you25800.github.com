import{_ as e,o as a,c as s,R as l}from"./chunks/framework.333b51ca.js";const _=JSON.parse('{"title":"PostgreSQL circle() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/circle().md","filePath":"database/postgreSQL/ref/circle().md","lastUpdated":1690352360000}'),c={name:"database/postgreSQL/ref/circle().md"},o=l('<h1 id="postgresql-circle-函数" tabindex="-1">PostgreSQL circle() 函数 <a class="header-anchor" href="#postgresql-circle-函数" aria-label="Permalink to &quot;PostgreSQL circle() 函数&quot;">​</a></h1><p>PostgreSQL <code>circle()</code> 函数通过圆心点和半径构造一个圆形。</p><h2 id="circle-语法" tabindex="-1"><code>circle()</code> 语法 <a class="header-anchor" href="#circle-语法" aria-label="Permalink to &quot;`circle()` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>circle()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">circle</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">point</span><span style="color:#A6ACCD;">, radius) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">circle</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>point</code></em></p><p>必需的。 圆心点。 比如： <code>point &#39;(1,1)&#39;</code>。</p></li><li><p><em><code>radius</code></em></p><p>必需的。 圆的半径。一个双精度类型的值。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>circle()</code> 函数返回一个通过圆心点和半径构造的圆形。</p><h2 id="circle-示例" tabindex="-1"><code>circle()</code> 示例 <a class="header-anchor" href="#circle-示例" aria-label="Permalink to &quot;`circle()` 示例&quot;">​</a></h2><p>下面的语句示例展示了如何使用 PostgreSQL <code>circle()</code> 函数构造一个圆点在 <code>(1,1)</code> 且半径为 1 的圆。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">circle</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">point</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(1,1)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">circle</span></span>\n<span class="line"><span style="color:#FFCB6B;">-----------</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;(</span><span style="color:#FFCB6B;">1,1</span><span style="color:#89DDFF;">)</span><span style="color:#FFCB6B;">,1&gt;</span></span></code></pre></div>',13),t=[o];function n(r,p,i,d,h,C){return a(),s("div",null,t)}const u=e(c,[["render",n]]);export{_ as __pageData,u as default};
