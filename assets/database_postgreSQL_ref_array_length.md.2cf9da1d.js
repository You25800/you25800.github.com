import{_ as a,o as s,c as e,R as l}from"./chunks/framework.333b51ca.js";const C=JSON.parse('{"title":"PostgreSQL array_length() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/array_length.md","filePath":"database/postgreSQL/ref/array_length.md","lastUpdated":1690296072000}'),n={name:"database/postgreSQL/ref/array_length.md"},t=l('<h1 id="postgresql-array-length-函数" tabindex="-1">PostgreSQL array_length() 函数 <a class="header-anchor" href="#postgresql-array-length-函数" aria-label="Permalink to &quot;PostgreSQL array_length() 函数&quot;">​</a></h1><p>PostgreSQL <code>array_length()</code> 函数返回指定的数组中指定维度的长度。</p><h2 id="array-length-语法" tabindex="-1"><code>array_length()</code> 语法 <a class="header-anchor" href="#array-length-语法" aria-label="Permalink to &quot;`array_length()` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>array_length()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">array_length(</span><span style="color:#F78C6C;">array</span><span style="color:#A6ACCD;">, dimension) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">integer</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>array</code></em></p><p>必需的。 数组。</p></li><li><p><em><code>dimension</code></em></p><p>必需的。 数组的维度，它是一个整数。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>array_length()</code> 函数返回一个整数，它是指定的数组中指定维度的长度。</p><p>如果您指定了一个数组中不存在的维度，该函数将返回 <code>NULL</code>。</p><h2 id="array-length-示例" tabindex="-1"><code>array_length()</code> 示例 <a class="header-anchor" href="#array-length-示例" aria-label="Permalink to &quot;`array_length()` 示例&quot;">​</a></h2><p>本示例展示了如何使用 PostgreSQL <code>array_length()</code> 函数返回数组的长度。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> array_length(</span><span style="color:#F78C6C;">ARRAY</span><span style="color:#A6ACCD;">[0, 1, 2], </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">array_length</span></span>\n<span class="line"><span style="color:#FFCB6B;">--------------</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">3</span></span></code></pre></div><p>对于一个多维数组，您可以获取某个数组维度的长度。比如：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> array_length(</span><span style="color:#F78C6C;">ARRAY</span><span style="color:#A6ACCD;">[[1,2], [3,4], [5,6]], </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">array_length</span></span>\n<span class="line"><span style="color:#FFCB6B;">--------------</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">2</span></span></code></pre></div><p>这里，您获取了数组 <code>[[1,2], [3,4], [5,6]]</code> 第二维的长度是 2。</p>',18),o=[t];function r(p,c,i,d,h,y){return s(),e("div",null,o)}const _=a(n,[["render",r]]);export{C as __pageData,_ as default};
