import{_ as s,o,c as a,R as n}from"./chunks/framework.333b51ca.js";const D=JSON.parse('{"title":"PostgreSQL jsonb_to_record() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/jsonb_to_record.md","filePath":"database/postgreSQL/ref/jsonb_to_record.md","lastUpdated":1690180485000}'),l={name:"database/postgreSQL/ref/jsonb_to_record.md"},e=n(`<h1 id="postgresql-jsonb-to-record-函数" tabindex="-1">PostgreSQL jsonb_to_record() 函数 <a class="header-anchor" href="#postgresql-jsonb-to-record-函数" aria-label="Permalink to &quot;PostgreSQL jsonb_to_record() 函数&quot;">​</a></h1><p>PostgreSQL <code>jsonb_to_record()</code> 函数将指定的最顶层的 JSONB 对象扩展为一个在 AS 子句中定义的具有符合类型的行。</p><h2 id="jsonb-to-record-语法" tabindex="-1"><code>jsonb_to_record()</code> 语法 <a class="header-anchor" href="#jsonb-to-record-语法" aria-label="Permalink to &quot;\`jsonb_to_record()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>jsonb_to_record()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">jsonb_to_record(from_json JSONB) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> RECORD</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>from_json</code></em></p><p>必需的。 要转的 JSONB 对象。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>jsonb_to_record()</code> 函数返回一个在 AS 子句中定义的 <code>RECORD</code> 类型值，它由指定的 JSONB 对象转换而来。 JSONB 对象都依照 <a href="./jsonb_populate_record.html"><code>jsonb_populate_record()</code></a> 函数被转成 RECORD 类型的值。</p><h2 id="jsonb-to-record-示例" tabindex="-1"><code>jsonb_to_record()</code> 示例 <a class="header-anchor" href="#jsonb-to-record-示例" aria-label="Permalink to &quot;\`jsonb_to_record()\` 示例&quot;">​</a></h2><p>本示例展示了如何使用 PostgreSQL <code>jsonb_to_record()</code> 函数将一个 JSONB 对象转为一个具有复杂类型的行。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span></span>
<span class="line"><span style="color:#A6ACCD;">  jsonb_to_record(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 20, &quot;hobbies&quot;: [&quot;sports&quot;, &quot;cars&quot;]}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> x(</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">TEXT</span><span style="color:#A6ACCD;">, age </span><span style="color:#C792EA;">INT</span><span style="color:#A6ACCD;">, hobbies </span><span style="color:#C792EA;">TEXT</span><span style="color:#A6ACCD;">[]);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">age</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">hobbies</span></span>
<span class="line"><span style="color:#FFCB6B;">------+-----+---------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Tom</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">20</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">sports,cars}</span></span></code></pre></div><p>这里，我们在 <code>AS</code> 子句中定义了要返回的行类型: <code>AS x(name TEXT, age INT, hobbies TEXT[])</code>。</p><p>您还可以集合自定义的类型使用更复杂的类型。</p><p>首先，让我们创建一个自定义的 SQL 类型：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TYPE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> (country </span><span style="color:#C792EA;">TEXT</span><span style="color:#A6ACCD;">, city </span><span style="color:#C792EA;">TEXT</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>然后将一个更复杂的 JSONB 对象转为行：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span></span>
<span class="line"><span style="color:#A6ACCD;">  jsonb_to_record(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 20, &quot;hobbies&quot;: [&quot;sports&quot;, &quot;cars&quot;], &quot;address&quot;: {&quot;country&quot;: &quot;CN&quot;, &quot;city&quot;: &quot;BeiJing&quot;}}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  ) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> x(</span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">TEXT</span><span style="color:#A6ACCD;">, age </span><span style="color:#C792EA;">INT</span><span style="color:#A6ACCD;">, hobbies </span><span style="color:#C792EA;">TEXT</span><span style="color:#A6ACCD;">[], </span><span style="color:#F78C6C;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">address</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">age</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">hobbies</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">address</span></span>
<span class="line"><span style="color:#FFCB6B;">------+-----+---------------+--------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Tom</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">20</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">sports,cars}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">CN,BeiJing</span><span style="color:#89DDFF;">)</span></span></code></pre></div>`,20),p=[e];function t(c,r,C,y,d,A){return o(),a("div",null,p)}const F=s(l,[["render",t]]);export{D as __pageData,F as default};
