import{_ as e,o as t,c as a,R as o}from"./chunks/framework.333b51ca.js";const h=JSON.parse('{"title":"影片描述表 film_text","description":"","frontmatter":{},"headers":[],"relativePath":"database/sakila/影片描述表.md","filePath":"database/sakila/影片描述表.md","lastUpdated":1688717707000}'),s={name:"database/sakila/影片描述表.md"},l=o(`<h1 id="影片描述表-film-text" tabindex="-1">影片描述表 film_text <a class="header-anchor" href="#影片描述表-film-text" aria-label="Permalink to &quot;影片描述表 film_text&quot;">​</a></h1><p>本文介绍了 Sakila 数据库中的 film_text 表的表结构以及与其他表的关系。</p><p><code>film_text</code> 表中包含了属于 <code>film</code> 表的 <code>film_id </code>，<code>title</code> 和 <code>description</code> 字段，通过对 <code>film</code> 表的 <code>INSERT</code>，<code>UPDATE</code> 和 <code>DELETE</code> 操作之上的<a href="https://www.sjkjc.com/sakila/triggers/" target="_blank" rel="noreferrer">触发器</a>和 <code>film</code> 表的内容同步。</p><p>在 MySQL 5.6.10 之前，<code>film_text</code> 表是 Sakila 示例数据库中唯一使用 <code>MyISAM</code> 存储引擎的表。这是因为要在<a href="https://www.sjkjc.com/sakila/table-film/" target="_blank" rel="noreferrer">影片表 <code>film</code></a> 表中的 <code>title</code> 和 <code>description</code> 字段上使用全文搜索，而 MySQL 5.6.10 之前 InnoDB 不支持全文搜索。</p><h2 id="表结构" tabindex="-1">表结构 <a class="header-anchor" href="#表结构" aria-label="Permalink to &quot;表结构&quot;">​</a></h2><p><code>film_text</code> 表结构如下：</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">+-------------+--------------+------+-----+---------+-------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| Field       | Type         | Null | Key | Default | Extra |</span></span>
<span class="line"><span style="color:#A6ACCD;">+-------------+--------------+------+-----+---------+-------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| film_id     | smallint     | NO   | PRI | NULL    |       |</span></span>
<span class="line"><span style="color:#A6ACCD;">| title       | varchar(255) | NO   | MUL | NULL    |       |</span></span>
<span class="line"><span style="color:#A6ACCD;">| description | text         | YES  |     | NULL    |       |</span></span>
<span class="line"><span style="color:#A6ACCD;">+-------------+--------------+------+-----+---------+-------+</span></span></code></pre></div><h2 id="字段说明" tabindex="-1">字段说明 <a class="header-anchor" href="#字段说明" aria-label="Permalink to &quot;字段说明&quot;">​</a></h2><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td><code>film_id</code></td><td>用于唯一标识表中每部影片的代理主键。</td></tr><tr><td><code>title</code></td><td>片名。</td></tr><tr><td><code>description</code></td><td>影片的简短描述或情节摘要。</td></tr></tbody></table><p>永远不要直接修改表 <code>film_text</code> 的内容。所有更改都应改为对 <code>film</code> 表进行。</p>`,10),d=[l];function c(n,i,r,p,_,m){return t(),a("div",null,d)}const x=e(s,[["render",c]]);export{h as __pageData,x as default};
