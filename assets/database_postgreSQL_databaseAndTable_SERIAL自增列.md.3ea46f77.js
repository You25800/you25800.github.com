import{_ as s,o as a,c as l,R as e}from"./chunks/framework.318fa179.js";const D=JSON.parse('{"title":"PostgreSQL SERIAL - 创建一个自增列","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/databaseAndTable/SERIAL自增列.md","filePath":"database/postgreSQL/databaseAndTable/SERIAL自增列.md","lastUpdated":1689061386000}'),n={name:"database/postgreSQL/databaseAndTable/SERIAL自增列.md"},o=e(`<h1 id="postgresql-serial-创建一个自增列" tabindex="-1">PostgreSQL SERIAL - 创建一个自增列 <a class="header-anchor" href="#postgresql-serial-创建一个自增列" aria-label="Permalink to &quot;PostgreSQL SERIAL - 创建一个自增列&quot;">​</a></h1><p>在本文中，我们介绍了如何在 PostgreSQL 中创建一个自增列。</p><p>在 PostgreSQL 中， <code>SERIAL</code> 是一种特殊的数据类型，以帮助您在表中创建一个自增列。</p><p><code>SERIAL</code> 类型的列和<a href="./标识列.html">标识列</a>很类似，其内部都使用了序列。 <code>SERIAL</code> 引入的更早，但它不是 SQL 标准的一部分，而标识列则符合 SQL 标准。因此，推荐使用标识列。</p><h2 id="创建-postgresql-serial-列" tabindex="-1">创建 PostgreSQL <code>SERIAL</code> 列 <a class="header-anchor" href="#创建-postgresql-serial-列" aria-label="Permalink to &quot;创建 PostgreSQL \`SERIAL\` 列&quot;">​</a></h2><p>要定义一个 <code>SERIAL</code> 列，请使用以下语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">column_name </span><span style="color:#C792EA;">SERIAL</span></span></code></pre></div><p>这里， <code>SERIAL</code> 作为一个数据类型跟在列名的后面。</p><p>注意， <code>SERIAL</code> 列将自动添加 <a href="./NOT_NULL.html"><code>NOT NULL</code></a> 约束，但不会自动成为<a href="./主键.html">主键列</a>，但是您可以在列定义中使用 <code>PRIMARY KEY</code> 使该列成为主键列。</p><p>要在<a href="./创建表.html">创建表</a>时定义一个 <code>SERIAL</code> 列，请使用以下 <code>CREATE TABLE</code> 语句：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">table_name</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  column_name </span><span style="color:#C792EA;">SERIAL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ...</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>要在已有表中添加一个 <code>SERIAL</code> 列，请使用以下 <a href="./修改表.html"><code>ALTER TABLE</code></a> 语句：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">ALTER</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> table_name</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">ADD</span><span style="color:#A6ACCD;"> COLUMN column_name </span><span style="color:#C792EA;">SERIAL</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><h2 id="postgresql-serial-种类" tabindex="-1">PostgreSQL <code>SERIAL</code> 种类 <a class="header-anchor" href="#postgresql-serial-种类" aria-label="Permalink to &quot;PostgreSQL \`SERIAL\` 种类&quot;">​</a></h2><p>您可以使用三种类型的 <code>SERIAL</code> 类型以应对不同的数据范围： <code>SMALLSERIAL</code>, <code>SERIAL</code>, <code>BIGSERIAL</code>。</p><table><thead><tr><th>姓名</th><th>存储大小</th><th>取值范围</th><th>对应的数据类型</th></tr></thead><tbody><tr><td><code>SMALLSERIAL</code></td><td>2 bytes</td><td>1 - 32767</td><td><code>SMALLINT</code></td></tr><tr><td><code>SERIAL</code></td><td>4 bytes</td><td>1 - 2147483647</td><td><code>INTEGER</code></td></tr><tr><td><code>BIGSERIAL</code></td><td>8 bytes</td><td>1 - 9223372036854775807</td><td><code>BIGINT</code></td></tr></tbody></table><h2 id="postgresql-serial-实例" tabindex="-1">PostgreSQL <code>SERIAL</code> 实例 <a class="header-anchor" href="#postgresql-serial-实例" aria-label="Permalink to &quot;PostgreSQL \`SERIAL\` 实例&quot;">​</a></h2><p>以下语句创建以 <code>id</code> 列为 <code>SERIAL</code> 列的 <code>test_serial</code> 表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_serial</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">   id </span><span style="color:#C792EA;">SERIAL</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">   notes </span><span style="color:#C792EA;">VARCHAR</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NOT NULL</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>要查看表的定义，请使用以下 <code>\\d</code> 命令：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\d test_serial</span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">Table</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">public.test_serial</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"> Column |       </span><span style="color:#F78C6C;">Type</span><span style="color:#A6ACCD;">        | Collation | Nullable |                 </span><span style="color:#C792EA;">Default</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">--------+-------------------+-----------+----------+-----------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> id     | </span><span style="color:#C792EA;">integer</span><span style="color:#A6ACCD;">           |           | </span><span style="color:#F78C6C;">not null</span><span style="color:#A6ACCD;"> | nextval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test_serial_id_seq</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::regclass)</span></span>
<span class="line"><span style="color:#A6ACCD;"> notes  | </span><span style="color:#F78C6C;">character</span><span style="color:#A6ACCD;"> varying |           | </span><span style="color:#F78C6C;">not null</span><span style="color:#A6ACCD;"> |</span></span>
<span class="line"><span style="color:#A6ACCD;">Indexes:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test_serial_pkey</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">, btree (id)</span></span></code></pre></div><p>这里：</p><ul><li><code>id</code> 列的数据类型为 <code>INTEGER</code>。</li><li><code>id</code> 列是一个 <code>NOT NULL</code> 列。</li><li><code>id</code> 列具有默认值 <code>nextval(&#39;test_serial_id_seq&#39;)</code>。 <code>test_serial_id_seq</code> 是内部序列的名称，这是由 PostgreSQL 自动生成的。</li></ul><p>您可以通过 <code>pg_get_serial_sequence()</code> 函数获取此列对应的内部序列名：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> pg_get_serial_sequence(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test_serial</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">pg_get_serial_sequence</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">---------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> public.test_serial_id_seq</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">row</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>以下语句向 <code>test_serial</code> 表中插入几个新行，其中 <code>id</code> 是 <code>SERIAL</code> 列，它的值会自动生成：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">INSERT INTO</span><span style="color:#A6ACCD;"> test_serial (notes)</span></span>
<span class="line"><span style="color:#F78C6C;">VALUES</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">), (</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">B</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">), (</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">C</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>要查看 <code>test_serial</code> 表中的行，请使用以下语句：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> test_serial;</span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">id | notes</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">----+-------</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> | A</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> | B</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> | C</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">rows</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="获取-postgresql-serial-列的当前的值" tabindex="-1">获取 PostgreSQL <code>SERIAL</code> 列的当前的值 <a class="header-anchor" href="#获取-postgresql-serial-列的当前的值" aria-label="Permalink to &quot;获取 PostgreSQL \`SERIAL\` 列的当前的值&quot;">​</a></h2><p>要获取 PostgreSQL <code>SERIAL</code> 列的当前的值，您可以使用 <a href="/database/postgreSQL_ref/序列操作函数/currval.html"><code>currval()</code></a> 函数。</p><p><code>currval()</code> 函数序列的名称作为参数，因此您需要先获取 <code>SERIAL</code> 列对应的内部序列的名称。 通常情况下， PostgreSQL 会按照如下格式为 <code>SERIAL</code> 列创建内部序列：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{table_name}_{column_name}_seq</span></span></code></pre></div><p>或者您可以通过上面实例中使用的 \\d 命令或者 <code>pg_get_serial_sequence()</code> 函数来获取此列对应的内部序列名。</p><p>然后，使用如下 <code>currval()</code> 函数获取 <code>SERIAL</code> 列的当前的值：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> currval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test_serial_id_seq</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">currval</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">---------</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">row</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>或者，您直接使用以下一个语句来获取 <code>SERIAL</code> 列的当前的值：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> currval(pg_get_serial_sequence(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test_serial</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">));</span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">currval</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">---------</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">row</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="修改自增列起始值" tabindex="-1">修改自增列起始值 <a class="header-anchor" href="#修改自增列起始值" aria-label="Permalink to &quot;修改自增列起始值&quot;">​</a></h2><p>要修改 PostgreSQL <code>SERIAL</code> 列的当前的值，您可以使用 <a href="/database/postgreSQL_ref/序列操作函数/setval.html"><code>setval()</code></a> 函数。</p><p>然后，让我们使用下面的语句将序列 <code>test_serial_id_seq</code> 的当前的值设置为 200，</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> setval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test_serial_id_seq</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>PostgreSQL <code>SERIAL</code> 数据类型可以帮您创建一个具有自增序列的列。</p>`,49),p=[o];function t(c,r,C,d,i,A){return a(),l("div",null,p)}const h=s(n,[["render",t]]);export{D as __pageData,h as default};
