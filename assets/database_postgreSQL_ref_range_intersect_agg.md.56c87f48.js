import{_ as s,o as a,c as n,R as e}from"./chunks/framework.318fa179.js";const F=JSON.parse('{"title":"PostgreSQL range_intersect_agg() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/range_intersect_agg.md","filePath":"database/postgreSQL/ref/range_intersect_agg.md","lastUpdated":1690289709000}'),l={name:"database/postgreSQL/ref/range_intersect_agg.md"},p=e(`<h1 id="postgresql-range-intersect-agg-函数" tabindex="-1">PostgreSQL range_intersect_agg() 函数 <a class="header-anchor" href="#postgresql-range-intersect-agg-函数" aria-label="Permalink to &quot;PostgreSQL range\\_intersect\\_agg() 函数&quot;">​</a></h1><p>PostgreSQL <code>range_intersect_agg()</code> 函数是一个聚合函数，它返回一个分组中所有非 NULL 输入范围值的交集。</p><h2 id="range-intersect-agg-语法" tabindex="-1"><code>range_intersect_agg()</code> 语法 <a class="header-anchor" href="#range-intersect-agg-语法" aria-label="Permalink to &quot;\`range_intersect_agg()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>range_intersect_agg()</code> 的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">range_intersect_agg(expr) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">RANGE</span></span></code></pre></div><p>我们通常在 SQLite 中按如下方式使用 <code>range_intersect_agg()</code> 函数：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> range_intersect_agg(expr), ...</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table_name</span></span>
<span class="line"><span style="color:#A6ACCD;">[WHERE ...]</span></span>
<span class="line"><span style="color:#A6ACCD;">[GROUP BY group_expr1, group_expr2, ...];</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>expr</code></em></p><p>必需的。一个列名或者表达式。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>range_intersect_agg()</code> 函数返回一个数组，其中包含了一个分组中所有非 NULL 输入范围值的交集。</p><p>如果多个范围值之间没有交集，则返回 <code>empty</code>。</p><h2 id="range-intersect-agg-示例" tabindex="-1"><code>range_intersect_agg()</code> 示例 <a class="header-anchor" href="#range-intersect-agg-示例" aria-label="Permalink to &quot;\`range_intersect_agg()\` 示例&quot;">​</a></h2><p>为了演示 PostgreSQL <code>range_intersect_agg()</code> 的用法，我们使用以下 <a href="/database/postgreSQL/base/UNION.html"><code>UNION</code></a> 和 <a href="/database/postgreSQL/base/select.html"><code>SELECT</code></a> 语句模拟一个表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Tim</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[3,7)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::int4range range_value</span></span>
<span class="line"><span style="color:#F78C6C;">UNION</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Tim</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[8,10]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::int4range range_value</span></span>
<span class="line"><span style="color:#F78C6C;">UNION</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(3,7)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::int4range range_value</span></span>
<span class="line"><span style="color:#F78C6C;">UNION</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[4,9)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::int4range range_value;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">range_value</span></span>
<span class="line"><span style="color:#FFCB6B;">------+-------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Tom</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">,9)</span></span>
<span class="line"><span style="color:#A6ACCD;"> Tom  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">,7)</span></span>
<span class="line"><span style="color:#A6ACCD;"> Tim  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">,7)</span></span>
<span class="line"><span style="color:#A6ACCD;"> Tim  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">,11)</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> rows)</span></span></code></pre></div><p>这里，我们拥有了关于用户选择的范围值的一些行。其中 <code>name</code> 列中是用户的姓名， <code>range_value</code> 列中是用户的一个区间值。</p><p>假如，要想以用户为单位（具有相同名称的用户视为一个用户），将每一个用户的所有的范围值都放在一个数组中，您可以使用 <code>GROUP BY</code> 子句按照 <code>name</code> 分组，并使用 <code>range_intersect_agg()</code> 函数计算每组中所有的<code>range_value</code> 的交集。下面的语句实现了这个需求：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#A6ACCD;">    t.name,</span></span>
<span class="line"><span style="color:#A6ACCD;">    range_intersect_agg(t.range_value) range_intersect_agg</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Tim</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[3,7)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::int4range range_value</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">UNION</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Tim</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[8,10]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::int4range range_value</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">UNION</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(3,7)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::int4range range_value</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">UNION</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Tom</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[4,9)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::int4range range_value</span></span>
<span class="line"><span style="color:#A6ACCD;">) t</span></span>
<span class="line"><span style="color:#F78C6C;">GROUP BY</span><span style="color:#A6ACCD;"> t.name;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">range_intersect_agg</span></span>
<span class="line"><span style="color:#FFCB6B;">------+---------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Tim</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">empty</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Tom</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">,7)</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> rows)</span></span></code></pre></div><p>这里：</p><ul><li>对于 <code>Tim</code>, <code>[3,7)</code> 和 <code>[8,10]</code> 没有交集，因此返回值 <code>empty</code>。</li><li>对于 <code>Tom</code>, <code>(3,7)</code> 和 <code>[4,9)</code> 的交集为 <code>{[4,9)}</code>。</li></ul>`,22),o=[p];function t(c,r,C,y,D,i){return a(),n("div",null,o)}const g=s(l,[["render",t]]);export{F as __pageData,g as default};
