import{_ as a,o as t,c as e,R as n}from"./chunks/framework.318fa179.js";const m=JSON.parse('{"title":"库存表 inventory","description":"","frontmatter":{},"headers":[],"relativePath":"database/sakila/库存表.md","filePath":"database/sakila/库存表.md","lastUpdated":1690270507000}'),s={name:"database/sakila/库存表.md"},o=n(`<h1 id="库存表-inventory" tabindex="-1">库存表 inventory <a class="header-anchor" href="#库存表-inventory" aria-label="Permalink to &quot;库存表 inventory&quot;">​</a></h1><p>本文介绍了 Sakila 数据库中的 inventory 表的表结构以及与其他表的关系。</p><p><code>inventory</code> 表的一行数据代表了一个给定商店中一个给定影片的一个拷贝。</p><p><code>inventory</code> 表中定义了外键指向 <a href="./影片表.html"><code>film</code></a> 和 <a href="./商店表.html"><code>store</code></a> 表。</p><p><a href="./租赁表.html">租赁表 <code>rental</code></a> 中定义了外键指向 <code>inventory</code> 表。</p><h2 id="表结构" tabindex="-1">表结构 <a class="header-anchor" href="#表结构" aria-label="Permalink to &quot;表结构&quot;">​</a></h2><p><code>inventory</code> 表结构如下：</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">+--------------+--------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| Field        | Type               | Null | Key | Default           | Extra                                         |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------------+--------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| inventory_id | mediumint unsigned | NO   | PRI | NULL              | auto_increment                                |</span></span>
<span class="line"><span style="color:#A6ACCD;">| film_id      | smallint unsigned  | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| store_id     | tinyint unsigned   | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| last_update  | timestamp          | NO   |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED on update CURRENT_TIMESTAMP |</span></span>
<span class="line"><span style="color:#A6ACCD;">+--------------+--------------------+------+-----+-------------------+-----------------------------------------------+</span></span></code></pre></div><h2 id="字段说明" tabindex="-1">字段说明 <a class="header-anchor" href="#字段说明" aria-label="Permalink to &quot;字段说明&quot;">​</a></h2><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td><code>inventory_id</code></td><td>用于唯一标识库存中每个项目的代理主键。</td></tr><tr><td><code>film_id</code></td><td>该项目所代表的影片主键。</td></tr><tr><td><code>store_id</code></td><td>商店的主键。</td></tr><tr><td><code>last_update</code></td><td>该行的创建时间或最近更新时间。</td></tr></tbody></table>`,10),d=[o];function l(i,r,c,p,_,h){return t(),e("div",null,d)}const u=a(s,[["render",l]]);export{m as __pageData,u as default};
