import{_ as s,o,c as a,R as n}from"./chunks/framework.333b51ca.js";const d=JSON.parse('{"title":"PostgreSQL json_typeof() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/json_typeof.md","filePath":"database/postgreSQL/ref/json_typeof.md","lastUpdated":1690180485000}'),l={name:"database/postgreSQL/ref/json_typeof.md"},p=n(`<h1 id="postgresql-json-typeof-函数" tabindex="-1">PostgreSQL json_typeof() 函数 <a class="header-anchor" href="#postgresql-json-typeof-函数" aria-label="Permalink to &quot;PostgreSQL json_typeof() 函数&quot;">​</a></h1><p>PostgreSQL <code>json_typeof()</code> 函数以字符串的形式返回指定的 JSON 值的类型。</p><h2 id="json-typeof-语法" tabindex="-1"><code>json_typeof()</code> 语法 <a class="header-anchor" href="#json-typeof-语法" aria-label="Permalink to &quot;\`json_typeof()\` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>json_typeof()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">json_typeof(json_value </span><span style="color:#F78C6C;">JSON</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">TEXT</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>json_value</code></em></p><p>必需的。 要检测类型的 JSON 值。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>json_typeof()</code> 函数返回一个文本字符串，它是指定的 JSON 值的类型。可能返回值包括：<code>object</code>、<code>array</code>、<code>string</code>、<code>number</code>、<code>boolean</code> 和 <code>null</code>。</p><p>如果您提供了一个 NULL 参数，<code>json_typeof()</code> 函数将返回 NULL。</p><h2 id="json-typeof-示例" tabindex="-1"><code>json_typeof()</code> 示例 <a class="header-anchor" href="#json-typeof-示例" aria-label="Permalink to &quot;\`json_typeof()\` 示例&quot;">​</a></h2><p>本示例展示了如何使用 PostgreSQL <code>json_typeof()</code> 函数返回 JSON 值的类型。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#A6ACCD;">  json_typeof(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&quot;abc&quot;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  json_typeof(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">123.45</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123.45</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  json_typeof(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  json_typeof(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">false</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  json_typeof(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[1,2,3]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[1,2,3]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  json_typeof(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{&quot;x&quot;:1}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#C3E88D;">:1}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  json_typeof(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">null</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">null</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">abc</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">123.45</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">true</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">false</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">,2,3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">&quot;x&quot;</span><span style="color:#FFCB6B;">:1}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span></span>
<span class="line"><span style="color:#FFCB6B;">--------+--------+---------+---------+---------+---------+------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">array</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span></span></code></pre></div><p>如果您提供了一个 NULL 参数，<code>json_typeof()</code> 函数将返回 NULL。例如：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> json_typeof(</span><span style="color:#F78C6C;">NULL</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">IS</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NULL</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">json_typeof(NULL) IS NULL</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">json_typeof(NULL</span><span style="color:#A6ACCD;">) IS NULL</span></span>
<span class="line"><span style="color:#FFCB6B;">---------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">t</span></span></code></pre></div>`,17),e=[p];function t(c,r,y,C,D,F){return o(),a("div",null,e)}const i=s(l,[["render",t]]);export{d as __pageData,i as default};
