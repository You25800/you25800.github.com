import{_ as s,o as a,c as e,R as n}from"./chunks/framework.333b51ca.js";const y=JSON.parse('{"title":"PostgreSQL CREATE TEMPORARY TABLE 临时表","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/databaseAndTable/临时表.md","filePath":"database/postgreSQL/databaseAndTable/临时表.md","lastUpdated":1689061386000}'),l={name:"database/postgreSQL/databaseAndTable/临时表.md"},p=n(`<h1 id="postgresql-create-temporary-table-临时表" tabindex="-1">PostgreSQL CREATE TEMPORARY TABLE 临时表 <a class="header-anchor" href="#postgresql-create-temporary-table-临时表" aria-label="Permalink to &quot;PostgreSQL CREATE TEMPORARY TABLE 临时表&quot;">​</a></h1><p>本文介绍了什么是 PostgreSQL 临时表以及如何使用临时表。</p><p>PostgreSQL 临时表是一种特殊的表，他们只在会话期间存在。临时表会在会话结束的时候被自动删除。</p><h2 id="创建-postgresql-临时表" tabindex="-1">创建 PostgreSQL 临时表 <a class="header-anchor" href="#创建-postgresql-临时表" aria-label="Permalink to &quot;创建 PostgreSQL 临时表&quot;">​</a></h2><p>您可以使用 <code>CREATE TEMPORARY TABLE</code> 语句像创建普通表一样创建临时表，如下：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> { TEMPORARY | TEMP } </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> temp_table_name (</span></span>
<span class="line"><span style="color:#A6ACCD;">   column_name data_type column_contraint</span></span>
<span class="line"><span style="color:#A6ACCD;">   [, ...]</span></span>
<span class="line"><span style="color:#A6ACCD;">   table_constraint</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>相比于常规的 <a href="./创建表.html"><code>CREATE TABLE</code></a> 语句，它只是多了一个 <code>TEMPORARY</code> 或者 <code>TEMP</code> 关键字，以指示当前创建的表是一个临时表。</p><p>您可以为临时表使用一个和常规表相同的表名，但是在临时表存在期间，您不能访问常规表。</p><h2 id="删除-postgresql-临时表" tabindex="-1">删除 PostgreSQL 临时表 <a class="header-anchor" href="#删除-postgresql-临时表" aria-label="Permalink to &quot;删除 PostgreSQL 临时表&quot;">​</a></h2><p>要删除一个临时表，您可以使用 <a href="./删除表.html"><code>DROP TABLE</code></a> 语句，如下：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">DROP</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> temp_table_name;</span></span></code></pre></div><p>这与删除常规表完全一样。</p><p>或者，您可以通过退出会话让 PostgreSQL 自动删除临时表。</p><h2 id="postgresql-临时表实例" tabindex="-1">PostgreSQL 临时表实例 <a class="header-anchor" href="#postgresql-临时表实例" aria-label="Permalink to &quot;PostgreSQL 临时表实例&quot;">​</a></h2><h3 id="创建临时表的实例" tabindex="-1">创建临时表的实例 <a class="header-anchor" href="#创建临时表的实例" aria-label="Permalink to &quot;创建临时表的实例&quot;">​</a></h3><p>以下语句创建了一个名为 test_temp 的临时表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> TEMP </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> test_temp (</span></span>
<span class="line"><span style="color:#A6ACCD;">  id </span><span style="color:#C792EA;">SERIAL</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  notes </span><span style="color:#C792EA;">VARCHAR</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>使用 <code>\\dt</code> 命令查看数据库中的表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\dt</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">List of relations</span></span>
<span class="line"><span style="color:#A6ACCD;">  Schema   |       Name        | Type  |  Owner</span></span>
<span class="line"><span style="color:#A6ACCD;">-----------+-------------------+-------+----------</span></span>
<span class="line"><span style="color:#A6ACCD;"> pg_temp_4 | test_temp         | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial       | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial_big   | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial_small | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | user_hobbies      | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | users             | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;">(6 rows)</span></span></code></pre></div><p>注意，临时表的 Schema 值是 <code>pg_temp_4</code>，而常规表的 Schema 值是 <code>public</code>。</p><h3 id="创建与常规表同名的临时表的实例" tabindex="-1">创建与常规表同名的临时表的实例 <a class="header-anchor" href="#创建与常规表同名的临时表的实例" aria-label="Permalink to &quot;创建与常规表同名的临时表的实例&quot;">​</a></h3><p>在创建临时表 <code>users</code> 之前，我们先看以下常规表 <code>users</code> 的结构：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\d users</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Table &quot;public.users&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">   Column   |            Type             | Collation | Nullable | Default</span></span>
<span class="line"><span style="color:#A6ACCD;">------------+-----------------------------+-----------+----------+---------</span></span>
<span class="line"><span style="color:#A6ACCD;"> id         | integer                     |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;"> name       | character varying(45)       |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;"> age        | integer                     |           |          |</span></span>
<span class="line"><span style="color:#A6ACCD;"> locked     | boolean                     |           | not null | false</span></span>
<span class="line"><span style="color:#A6ACCD;"> created_at | timestamp without time zone |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;">Indexes:</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;users_pkey&quot; PRIMARY KEY, btree (id)</span></span>
<span class="line"><span style="color:#A6ACCD;">Referenced by:</span></span>
<span class="line"><span style="color:#A6ACCD;">    TABLE &quot;user_hobbies&quot; CONSTRAINT &quot;fk_user&quot; FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE RESTRICT ON DELETE CASCADE</span></span></code></pre></div><p>以下语句创建一个名称为 <code>users</code> 的临时表，为了区分，临时表 <code>users</code> 只由一个 <code>id</code> 列:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> TEMP </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> users (</span></span>
<span class="line"><span style="color:#A6ACCD;">  id </span><span style="color:#C792EA;">SERIAL</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>使用 <code>\\dt</code> 命令查看数据库中的表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\dt</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">List of relations</span></span>
<span class="line"><span style="color:#A6ACCD;">  Schema   |       Name        | Type  |  Owner</span></span>
<span class="line"><span style="color:#A6ACCD;">-----------+-------------------+-------+----------</span></span>
<span class="line"><span style="color:#A6ACCD;"> pg_temp_4 | test_temp         | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> pg_temp_4 | users             | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial       | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial_big   | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial_small | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | user_hobbies      | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;">(6 rows)</span></span></code></pre></div><p>现在， 常规表 <code>users</code> 已经找不到了。</p><p>以下语句使用 <code>\\d</code> 查看 <code>users</code> 的表结构：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\d users</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Table &quot;pg_temp_4.users&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"> Column |  Type   | Collation | Nullable |              Default</span></span>
<span class="line"><span style="color:#A6ACCD;">--------+---------+-----------+----------+-----------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> id     | integer |           | not null | nextval(&#39;users_id_seq&#39;::regclass)</span></span>
<span class="line"><span style="color:#A6ACCD;">Indexes:</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;users_pkey&quot; PRIMARY KEY, btree (id)</span></span></code></pre></div><p>这里是临时表 <code>users</code> 的结构。</p><p>删除临时表 <code>users</code>：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">DROP</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> users;</span></span></code></pre></div><p>然后，再次使用 <code>\\dt</code> 命令查看数据库中的表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\dt</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">List of relations</span></span>
<span class="line"><span style="color:#A6ACCD;">  Schema   |       Name        | Type  |  Owner</span></span>
<span class="line"><span style="color:#A6ACCD;">-----------+-------------------+-------+----------</span></span>
<span class="line"><span style="color:#A6ACCD;"> pg_temp_4 | test_temp         | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial       | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial_big   | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | test_serial_small | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | user_hobbies      | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;"> public    | users             | table | postgres</span></span>
<span class="line"><span style="color:#A6ACCD;">(6 rows)</span></span></code></pre></div><p>临时表 <code>users</code> 不见了， 常规表 <code>users</code> 又出现在了上面的列表中。</p><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>PostgreSQL 临时表是一种只在会话期间存在的特殊的表。在会话结束后， PostgreSQL 会自动删除临时表。</p>`,43),t=[p];function o(c,r,i,C,A,d){return a(),e("div",null,t)}const g=s(l,[["render",o]]);export{y as __pageData,g as default};
