import{_ as a,o as s,c as e,R as o}from"./chunks/framework.318fa179.js";const m=JSON.parse('{"title":"PostgreSQL overlay() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/overlay.md","filePath":"database/postgreSQL/ref/overlay.md","lastUpdated":1689843090000}'),l={name:"database/postgreSQL/ref/overlay.md"},n=o('<h1 id="postgresql-overlay-函数" tabindex="-1">PostgreSQL overlay() 函数 <a class="header-anchor" href="#postgresql-overlay-函数" aria-label="Permalink to &quot;PostgreSQL overlay() 函数&quot;">​</a></h1><p>PostgreSQL <code>overlay()</code> 函数在一个字符串中使用指定的文本替换从指定位置开始的指定数量的字符。</p><h2 id="overlay-语法" tabindex="-1"><code>overlay()</code> 语法 <a class="header-anchor" href="#overlay-语法" aria-label="Permalink to &quot;`overlay()` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>overlay()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">overlay(string PLACING replacement </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">start</span><span style="color:#A6ACCD;"> [FOR count])</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>string</code></em></p><p>必需的。 文本。要在中搜索和替换的字符串。</p></li><li><p><em><code>replacement</code></em></p><p>必需的。 文本。替换为的字符串。</p></li><li><p><em><code>start</code></em></p><p>必需的。 整数。替换开始的索引位置。</p></li><li><p><em><code>count</code></em></p><p>可选的。 整数。被替换的字符的数量。默认为 <code>replacement</code> 的字符串数，即 <code>length(replacement)</code>。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>overlay()</code> 函数返回一个字符串，该字符串中从指定位置开始的指定数量的字符被指定的内容替换。</p><p>若参数为 <code>NULL</code>，该函数将返回 <code>NULL</code>。</p><h2 id="overlay-示例" tabindex="-1"><code>overlay()</code> 示例 <a class="header-anchor" href="#overlay-示例" aria-label="Permalink to &quot;`overlay()` 示例&quot;">​</a></h2><p>这个示例说明了如果使用 <code>overlay()</code> 函数将字符串 <code>Hello Tim</code> 修改为 <code>Hi Tim</code>。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> overlay(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello Tim</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> PLACING </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hi</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> FOR </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">overlay</span></span>\n<span class="line"><span style="color:#FFCB6B;">---------</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Hi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Tim</span></span></code></pre></div><p>这个示例说明了如果使用 <code>overlay()</code> 函数将字符串 <code>Hello Tim</code> 修改为 <code>Hello Adam</code>。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> overlay(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello Tim</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> PLACING </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Adam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">overlay</span></span>\n<span class="line"><span style="color:#FFCB6B;">------------</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Hello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Adam</span></span></code></pre></div><p>这里，我们没有指定 <code>FOR count</code> 子句，那么 <code>count</code> 的默认是 <code>Adam</code> 的长度，即 4。</p>',18),p=[n];function t(c,r,d,i,y,C){return s(),e("div",null,p)}const A=a(l,[["render",t]]);export{m as __pageData,A as default};
