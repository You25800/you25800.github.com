import{_ as s,o as e,c as a,R as c}from"./chunks/framework.333b51ca.js";const _=JSON.parse('{"title":"PostgreSQL current_schemas() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/current_schemas.md","filePath":"database/postgreSQL/ref/current_schemas.md","lastUpdated":1690341661000}'),n={name:"database/postgreSQL/ref/current_schemas.md"},t=c('<h1 id="postgresql-current-schemas-函数" tabindex="-1">PostgreSQL current_schemas() 函数 <a class="header-anchor" href="#postgresql-current-schemas-函数" aria-label="Permalink to &quot;PostgreSQL current_schemas() 函数&quot;">​</a></h1><p>PostgreSQL <code>current_schemas()</code> 函数按照优先级顺序返回当前有效搜索路径上的所有的架构名称。</p><h2 id="current-schemas-语法" tabindex="-1"><code>current_schemas()</code> 语法 <a class="header-anchor" href="#current-schemas-语法" aria-label="Permalink to &quot;`current_schemas()` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>current_schemas()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">current_schemas(include_implicit </span><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;">[]</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>include_implicit</code></em></p><p>是否包含隐式的系统模式。布尔类型。</p><p>如果 <code>include_implicit</code> 是 <code>FALSE</code>，则返回当前搜索路径中定义的所有存在且可搜索的模式。</p><p>如果 <code>include_implicit</code> 是 <code>TRUE</code>，则返回的列表包括隐式搜索的系统模式，例如 <code>pg_catalog</code>.</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>current_schemas()</code> 函数返回一个数组，它包含当前有效搜索路径上的所有的架构名称，按照优先级顺序。</p><h2 id="current-schemas-示例" tabindex="-1"><code>current_schemas()</code> 示例 <a class="header-anchor" href="#current-schemas-示例" aria-label="Permalink to &quot;`current_schemas()` 示例&quot;">​</a></h2><p>要获取有效路径上的所有的模式（不含隐式模式），请使用下面带有 <code>current_schemas()</code> 函数的 <code>SELECT</code> 语句：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> current_schemas(false);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">current_schemas</span></span>\n<span class="line"><span style="color:#FFCB6B;">-----------------</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">public}</span></span></code></pre></div><p>要获取有效路径上的所有的模式（包含隐式模式），请使用以下语句：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> current_schemas(true);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">current_schemas</span></span>\n<span class="line"><span style="color:#FFCB6B;">---------------------</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">pg_catalog,public}</span></span></code></pre></div><p>这里， <code>pg_catalog</code> 是一个隐式的系统模式。</p>',17),o=[t];function l(r,p,i,d,h,u){return e(),a("div",null,o)}const C=s(n,[["render",l]]);export{_ as __pageData,C as default};
