import{_ as s,o as e,c as a,R as p}from"./chunks/framework.333b51ca.js";const h=JSON.parse('{"title":"PostgreSQL pg_sleep() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/pg_sleep.md","filePath":"database/postgreSQL/ref/pg_sleep.md","lastUpdated":1690159250000}'),l={name:"database/postgreSQL/ref/pg_sleep.md"},o=p(`<h1 id="postgresql-pg-sleep-函数" tabindex="-1">PostgreSQL pg_sleep() 函数 <a class="header-anchor" href="#postgresql-pg-sleep-函数" aria-label="Permalink to &quot;PostgreSQL pg_sleep() 函数&quot;">​</a></h1><p>PostgreSQL <code>pg_sleep()</code> 函数将当前服务器进程的执行暂停（睡眠）指定的秒数。</p><h2 id="pg-sleep-语法" tabindex="-1"><code>pg_sleep()</code> 语法 <a class="header-anchor" href="#pg-sleep-语法" aria-label="Permalink to &quot;\`pg_sleep()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>pg_sleep()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">pg_sleep(seconds DOUBLE)</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>seconds</code></em></p><p>必需的。 以秒为单位的睡眠时长。它应该大于或等于 0，并且可以带有小数部分。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>pg_sleep()</code> 函数没有返回值，它用于将当前服务器进程的执行暂停（睡眠）指定的秒数。</p><h2 id="pg-sleep-示例" tabindex="-1"><code>pg_sleep()</code> 示例 <a class="header-anchor" href="#pg-sleep-示例" aria-label="Permalink to &quot;\`pg_sleep()\` 示例&quot;">​</a></h2><p>这里结合 <a href="./clock_timestamp.html"><code>clock_timestamp()</code></a> 函数展示了 <code>pg_sleep()</code> 的能力。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#A6ACCD;">    clock_timestamp</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    pg_sleep(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    clock_timestamp</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">-[</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RECORD</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">]---+------------------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">clock_timestamp</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">2022-05-20</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#C3E88D;">:32:26.813093+08</span></span>
<span class="line"><span style="color:#FFCB6B;">pg_sleep</span><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#FFCB6B;">clock_timestamp</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">2022-05-20</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#C3E88D;">:32:36.823482+08</span></span></code></pre></div><p>这里，由于我们在两个 <code>clock_timestamp()</code> 函数中间使用 <code>pg_sleep(10)</code> 将当前服务器进程的执行暂定了 10 秒，所以第二个 <code>clock_timestamp()</code> 函数比第一个的执行晚了 10 秒，从而第二个的返回值比第一个晚 10 秒。</p>`,14),n=[o];function t(c,r,i,d,C,_){return e(),a("div",null,n)}const y=s(l,[["render",t]]);export{h as __pageData,y as default};
