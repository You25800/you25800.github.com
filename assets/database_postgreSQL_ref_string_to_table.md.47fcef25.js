import{_ as s,o as a,c as n,R as l}from"./chunks/framework.318fa179.js";const F=JSON.parse('{"title":"PostgreSQL string_to_table() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/string_to_table.md","filePath":"database/postgreSQL/ref/string_to_table.md","lastUpdated":1689922193000}'),e={name:"database/postgreSQL/ref/string_to_table.md"},o=l(`<h1 id="postgresql-string-to-table-函数" tabindex="-1">PostgreSQL string_to_table() 函数 <a class="header-anchor" href="#postgresql-string-to-table-函数" aria-label="Permalink to &quot;PostgreSQL string\\_to\\_table() 函数&quot;">​</a></h1><p>PostgreSQL <code>string_to_table()</code> 函数将一个指定的字符串按照指定的分隔符拆分并将结果作为表返回。</p><p>此函数和 <a href="./regexp_split_to_table.html"><code>regexp_split_to_table()</code></a> 函数类似。</p><h2 id="string-to-table-语法" tabindex="-1"><code>string_to_table()</code> 语法 <a class="header-anchor" href="#string-to-table-语法" aria-label="Permalink to &quot;\`string_to_table()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>string_to_table()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">string_to_table(string </span><span style="color:#C792EA;">text</span><span style="color:#A6ACCD;">, delimiter </span><span style="color:#C792EA;">text</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">set</span></span></code></pre></div><p>或者</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">string_to_table(string </span><span style="color:#C792EA;">text</span><span style="color:#A6ACCD;">, delimiter </span><span style="color:#C792EA;">text</span><span style="color:#A6ACCD;">, null_string </span><span style="color:#C792EA;">text</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">set</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>string</code></em></p><p>必需的。 一个要拆分的字符串。</p></li><li><p><em><code>delimiter</code></em></p><p>必需的。 分隔符。</p></li><li><p><em><code>null_string</code></em></p><p>可选的。 一个字符串。拆分后的部分中与它匹配的元素将被替换为 <code>NULL</code>。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>string_to_table()</code> 函数返回一个表（行的集合），该表中的行就是字符串 <code>string</code> 按照分隔符 <code>delimiter</code> 拆分的所有部分。</p><p>如果 <code>delimiter</code> 为 <code>NULL</code>，字符串中的所有字符都将单独成为一行。</p><p>如果 <code>delimiter</code> 是一个空字符串，那么整个字符串将成为唯一的行。</p><p>如果 <code>null_string</code> 不为 <code>NULL</code>，那么拆分后的结果中的与它匹配的部分将被替换为 <code>NULL</code>。</p><h2 id="string-to-table-示例" tabindex="-1"><code>string_to_table()</code> 示例 <a class="header-anchor" href="#string-to-table-示例" aria-label="Permalink to &quot;\`string_to_table()\` 示例&quot;">​</a></h2><p>这个示例演示了如何使用 <code>string_to_table()</code> 函数将一个字符串根据分隔符拆分成表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> string_to_table(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab,cd,ef,gh</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">string_to_table</span></span>
<span class="line"><span style="color:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ab</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ef</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gh</span></span></code></pre></div><p>如果 <code>delimiter</code> 为 <code>NULL</code>，字符串中的所有字符都将成为结果集中的成员。比如：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> string_to_table(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab,cd,ef,gh</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">NULL</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">string_to_table</span></span>
<span class="line"><span style="color:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">a</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">b</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">c</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">d</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">e</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">f</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">g</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">h</span></span></code></pre></div><p>这里，由于 <code>delimiter</code> 为 <code>NULL</code>，字符串中每个字符都成为一个独立的行。</p><p>如果 <code>delimiter</code> 是一个空字符串，那么整个字符串将成为表中唯一的行。比如：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> string_to_table(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab,cd,ef,gh</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">string_to_table</span></span>
<span class="line"><span style="color:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">&quot;ab,cd,ef,gh&quot;</span><span style="color:#FFCB6B;">}</span></span></code></pre></div><p>如果 <code>null_string</code> 不为 <code>NULL</code>，那么拆分后的结果中的与它匹配的部分将被替换为 <code>NULL</code>。比如：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> string_to_table(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ab,cd,ef,gh</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">string_to_table</span></span>
<span class="line"><span style="color:#FFCB6B;">-----------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ab</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ef</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gh</span></span></code></pre></div>`,29),p=[o];function t(c,r,i,C,d,y){return a(),n("div",null,p)}const A=s(e,[["render",t]]);export{F as __pageData,A as default};
