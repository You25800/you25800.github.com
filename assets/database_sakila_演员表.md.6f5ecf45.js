import{_ as a,o as t,c as e,R as s}from"./chunks/framework.333b51ca.js";const A=JSON.parse('{"title":"演员表 actor","description":"","frontmatter":{},"headers":[],"relativePath":"database/sakila/演员表.md","filePath":"database/sakila/演员表.md","lastUpdated":1690270507000}'),n={name:"database/sakila/演员表.md"},o=s(`<h1 id="演员表-actor" tabindex="-1">演员表 actor <a class="header-anchor" href="#演员表-actor" aria-label="Permalink to &quot;演员表 actor&quot;">​</a></h1><p>本文介绍了 Sakila 数据库中的 actor 表的表结构以及与其他表的关系。</p><p>演员表 <code>actor</code> 表列出了所有演员的信息。</p><p>演员表 <code>actor</code> 表和<a href="./影片表.html">影片表 <code>film</code></a> 通过 <a href="./影片演员关系表.html"><code>film_actor</code></a> 表关联在一起。演员和影片是多对多的关系。</p><h2 id="表结构" tabindex="-1">表结构 <a class="header-anchor" href="#表结构" aria-label="Permalink to &quot;表结构&quot;">​</a></h2><p><code>actor</code> 表结构如下：</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| Field       | Type              | Null | Key | Default           | Extra                                         |</span></span>
<span class="line"><span style="color:#A6ACCD;">+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| actor_id    | smallint unsigned | NO   | PRI | NULL              | auto_increment                                |</span></span>
<span class="line"><span style="color:#A6ACCD;">| first_name  | varchar(45)       | NO   |     | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| last_name   | varchar(45)       | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| last_update | timestamp         | NO   |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED on update CURRENT_TIMESTAMP |</span></span>
<span class="line"><span style="color:#A6ACCD;">+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span></code></pre></div><h2 id="字段说明" tabindex="-1">字段说明 <a class="header-anchor" href="#字段说明" aria-label="Permalink to &quot;字段说明&quot;">​</a></h2><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td><code>actor_id</code></td><td>用于唯一标识表中每个演员的代理主键。</td></tr><tr><td><code>first_name</code></td><td>演员的名字。</td></tr><tr><td><code>last_name</code></td><td>演员姓。</td></tr><tr><td><code>last_update</code></td><td>该行的创建时间或最近更新时间。</td></tr></tbody></table>`,9),l=[o];function c(d,r,p,i,_,h){return t(),e("div",null,l)}const C=a(n,[["render",c]]);export{A as __pageData,C as default};
