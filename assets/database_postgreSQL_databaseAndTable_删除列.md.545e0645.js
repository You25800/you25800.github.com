import{_ as s,o as a,c as n,R as e}from"./chunks/framework.333b51ca.js";const u=JSON.parse('{"title":"使用 PostgreSQL DROP COLUMN 语句从表中删除列","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/databaseAndTable/删除列.md","filePath":"database/postgreSQL/databaseAndTable/删除列.md","lastUpdated":1689061386000}'),l={name:"database/postgreSQL/databaseAndTable/删除列.md"},o=e(`<h1 id="使用-postgresql-drop-column-语句从表中删除列" tabindex="-1">使用 PostgreSQL DROP COLUMN 语句从表中删除列 <a class="header-anchor" href="#使用-postgresql-drop-column-语句从表中删除列" aria-label="Permalink to &quot;使用 PostgreSQL DROP COLUMN 语句从表中删除列&quot;">​</a></h1><p>在本文中，您将了解如何使用 PostgreSQL <code>ALTER TABLE ... DROP COLUMN</code> 语句从表中删除一个或多个列。</p><p>有时候，您可能因为以下原因需要从现有的表中删除一个或多个列：</p><ul><li>此列是多余的。</li><li>此列数据类型已经发生变化，需要先删除列后再重新创建列并导入数据。</li><li>此列已经被其他的列代替了。</li></ul><p>假设，您有一个用户表，它有用户名，邮件，密码等信息。但是为了安全性，您需要将密码列迁移到另外的一个表中，然后删除掉用户表中的密码列。</p><p>PostgreSQL 允许您使用 <code>ALTER TABLE</code> 语句来修改一个现有的表。要从一个表中删除一列或多列，请使用 <code>ALTER TABLE ... DROP COLUMN</code> 语句。</p><h2 id="postgresql-drop-column-语法" tabindex="-1">PostgreSQL <code>DROP COLUMN</code> 语法 <a class="header-anchor" href="#postgresql-drop-column-语法" aria-label="Permalink to &quot;PostgreSQL \`DROP COLUMN\` 语法&quot;">​</a></h2><p>要从一个表删除一个或者多个列，请按照如下语法使用 <code>ALTER TABLE ... DROP COLUMN</code> 语句：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">ALTER</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> table_name</span></span>
<span class="line"><span style="color:#F78C6C;">DROP</span><span style="color:#A6ACCD;"> [COLUMN] [IF EXISTS] column_name [RESTRICT | CASCADE]</span></span>
<span class="line"><span style="color:#A6ACCD;">[, DROP [COLUMN] ...];</span></span></code></pre></div><p>解释说明：</p><ul><li><code>table_name</code> 是要在其中添加列的表。</li><li><code>DROP [COLUMN] ...</code> 子句用来删除一个列。其中 <code>COLUMN</code> 关键字是可以省略的。如果要在一个语句中删除多个列，请使用多个逗号分隔的 <code>ADD [COLUMN] ...</code> 子句。</li><li><code>IF EXISTS</code> 是可选的， 它可以避免因为给出的列名不存在而导致的错误。</li><li><code>column_name</code> 是要删除的列的名字。</li><li><code>CASCADE | RESTRICT</code> 是可选的， 它指示了如果有其他对象（比如<a href="./外键.html">外键</a>、视图、触发器、存储过程等）引用了要删除的列的处理策略。其中： <ul><li><code>CASCADE</code> - 允许删除此列和引用此列的对象。</li><li><code>RESTRICT</code> - 如果有对象引用此列，拒绝删除此列，并给出错误。它是默认的选项。</li></ul></li></ul><p>当您从表中删除一列时，PostgreSQL 将自动删除所有涉及删除列的<a href="/database/postgreSQL/index/">索引</a>和约束。</p><h2 id="postgresql-drop-column-示例" tabindex="-1">PostgreSQL <code>DROP COLUMN</code> 示例 <a class="header-anchor" href="#postgresql-drop-column-示例" aria-label="Permalink to &quot;PostgreSQL \`DROP COLUMN\` 示例&quot;">​</a></h2><p>这个实例演示了如何在 PostgreSQL 中删除一个列或多个列。</p><p>我们将在 <code>testdb</code> 数据库中创建 <code>users</code> 和 <code>user_hobbies</code> 两个表。其中， <code>users</code> 表用来存储用户的名称，性别，年龄等信息。 <code>user_hobbies</code> 表用来存储用户的业余爱好。</p><p>使用以下语句创建 <code>users</code> 表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">users</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  user_id </span><span style="color:#C792EA;">INTEGER</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NOT NULL</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">VARCHAR</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">45</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">NOT NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  age </span><span style="color:#C792EA;">INTEGER</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  locked </span><span style="color:#C792EA;">BOOLEAN</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NOT NULL</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEFAULT</span><span style="color:#A6ACCD;"> false,</span></span>
<span class="line"><span style="color:#A6ACCD;">  created_at </span><span style="color:#C792EA;">TIMESTAMP</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NOT NULL</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>使用以下语句创建 <code>user_hobbies</code> 表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">user_hobbies</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  hobby_id </span><span style="color:#C792EA;">SERIAL</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NOT NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  user_id </span><span style="color:#C792EA;">INTEGER</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NOT NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  hobby </span><span style="color:#C792EA;">VARCHAR</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">45</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">NOT NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  created_at </span><span style="color:#C792EA;">TIMESTAMP</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NOT NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;"> (hobby_id),</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">CONSTRAINT</span><span style="color:#A6ACCD;"> fk_user</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">FOREIGN KEY</span><span style="color:#A6ACCD;"> (user_id)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">REFERENCES</span><span style="color:#A6ACCD;"> users (user_id)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">ON DELETE CASCADE</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">UPDATE</span><span style="color:#A6ACCD;"> RESTRICT);</span></span></code></pre></div><p>使用 <code>\\d</code> 命令查看 <code>user_hobbies</code> 表的定义：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\d user_hobbies</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Table &quot;public.user_hobbies&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">   Column   |            Type             | Collation | Nullable |                    Default</span></span>
<span class="line"><span style="color:#A6ACCD;">------------+-----------------------------+-----------+----------+------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> hobby_id   | integer                     |           | not null | nextval(&#39;user_hobbies_hobby_id_seq&#39;::regclass)</span></span>
<span class="line"><span style="color:#A6ACCD;"> user_id    | integer                     |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;"> hobby      | character varying(45)       |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;"> created_at | timestamp without time zone |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;">Indexes:</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;user_hobbies_pkey&quot; PRIMARY KEY, btree (hobby_id)</span></span>
<span class="line"><span style="color:#A6ACCD;">Foreign-key constraints:</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;fk_user&quot; FOREIGN KEY (user_id) REFERENCES users(user_id) ON UPDATE RESTRICT ON DELETE CASCADE</span></span></code></pre></div><p>我们看到， <code>user_hobbies</code> 表中的外键 <code>fk_user</code> 引用了 <code>users</code> 表中的 <code>user_id</code> 列。</p><p>下面的语句用来要删除 <code>users</code> 表中的 <code>user_id</code> 列：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">ALTER</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> users</span></span>
<span class="line"><span style="color:#F78C6C;">DROP</span><span style="color:#A6ACCD;"> COLUMN user_id;</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ERROR:  cannot drop column user_id of table users because other objects depend on it</span></span>
<span class="line"><span style="color:#A6ACCD;">DETAIL:  constraint fk_user on table user_hobbies depends on column user_id of table users</span></span>
<span class="line"><span style="color:#A6ACCD;">HINT:  Use DROP ... CASCADE to drop the dependent objects too.</span></span></code></pre></div><p>由于，<code>user_hobbies</code> 表中的外键 <code>fk_user</code> 引用了 <code>users</code> 表中的 <code>user_id</code> 列，您不能删除此列， PostgreSQL 给出一个错误提示。</p><p>如果要强制删除此列，请使用 <code>CASCADE</code> 选项，如下：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">ALTER</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> users</span></span>
<span class="line"><span style="color:#F78C6C;">DROP</span><span style="color:#A6ACCD;"> COLUMN user_id</span></span>
<span class="line"><span style="color:#A6ACCD;">CASCADE;</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">NOTICE:  drop cascades to constraint fk_user on table user_hobbies</span></span>
<span class="line"><span style="color:#A6ACCD;">ALTER TABLE</span></span></code></pre></div><p>这里， <code>user_id</code> 列被删除了，并且 <code>user_hobbies</code> 表上的外键约束 <code>fk_user</code> 也被级联删除了。</p><p>我们可以通过 <code>\\d</code> 命令查看 <code>user_id</code> 列否被删除，如下：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\d users</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Table &quot;public.users&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">   Column   |            Type             | Collation | Nullable | Default</span></span>
<span class="line"><span style="color:#A6ACCD;">------------+-----------------------------+-----------+----------+---------</span></span>
<span class="line"><span style="color:#A6ACCD;"> name       | character varying(45)       |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;"> age        | integer                     |           |          |</span></span>
<span class="line"><span style="color:#A6ACCD;"> locked     | boolean                     |           | not null | false</span></span>
<span class="line"><span style="color:#A6ACCD;"> created_at | timestamp without time zone |           | not null |</span></span></code></pre></div><p>我们可以通过 <code>\\d</code> 命令查看表定义以验证是否外键是否被删除，如下：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\d user_hobbies</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Table &quot;public.user_hobbies&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">   Column   |            Type             | Collation | Nullable |                    Default</span></span>
<span class="line"><span style="color:#A6ACCD;">------------+-----------------------------+-----------+----------+------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> hobby_id   | integer                     |           | not null | nextval(&#39;user_hobbies_hobby_id_seq&#39;::regclass)</span></span>
<span class="line"><span style="color:#A6ACCD;"> user_id    | integer                     |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;"> hobby      | character varying(45)       |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;"> created_at | timestamp without time zone |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;">Indexes:</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;user_hobbies_pkey&quot; PRIMARY KEY, btree (hobby_id)</span></span></code></pre></div><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>PostgreSQL 提供了 <code>ALTER TABLE ... DROP COLUMN</code> 语句从一个表中删除一个或多个列。 通过 <code>ALTER TABLE</code> 语句，您还可以<a href="./重命名表.html">重命名表</a>、<a href="./重命名列.html">重命名列</a>、<a href="./删除列.html">删除列</a>、<a href="./修改列.html">修改列</a>的属性等。</p>`,39),p=[o];function t(c,r,C,A,i,d){return a(),n("div",null,p)}const D=s(l,[["render",t]]);export{u as __pageData,D as default};
