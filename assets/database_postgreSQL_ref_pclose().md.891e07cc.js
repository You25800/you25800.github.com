import{_ as s,o as a,c as o,R as e}from"./chunks/framework.318fa179.js";const F=JSON.parse('{"title":"PostgreSQL pclose() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/pclose().md","filePath":"database/postgreSQL/ref/pclose().md","lastUpdated":1690352360000}'),l={name:"database/postgreSQL/ref/pclose().md"},p=e('<h1 id="postgresql-pclose-函数" tabindex="-1">PostgreSQL pclose() 函数 <a class="header-anchor" href="#postgresql-pclose-函数" aria-label="Permalink to &quot;PostgreSQL pclose() 函数&quot;">​</a></h1><p>PostgreSQL <code>pclose()</code> 函数将指定的路径转换为闭合的路径。</p><h2 id="pclose-语法" tabindex="-1"><code>pclose()</code> 语法 <a class="header-anchor" href="#pclose-语法" aria-label="Permalink to &quot;`pclose()` 语法&quot;">​</a></h2><p>这是 PostgreSQL <code>pclose()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">pclose(</span><span style="color:#C792EA;">path</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">path</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>path</code></em></p><p>必需的。 一个路径。例如： <code>path &#39;[(0,0),(1,1),(2,0)]&#39;</code>。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>pclose()</code> 函数返回通过参数指定的路径的闭合形式。如果由参数指定的路径本身是闭合路径，则返回原路径。</p><h2 id="pclose-示例" tabindex="-1"><code>pclose()</code> 示例 <a class="header-anchor" href="#pclose-示例" aria-label="Permalink to &quot;`pclose()` 示例&quot;">​</a></h2><p>下面的语句示例展示了如何使用 PostgreSQL <code>pclose()</code> 函数将路径 <code>path &#39;[(0,0),(1,1),(2,0)]&#39;</code> 转为闭合形式。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> pclose(</span><span style="color:#C792EA;">path</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[(0,0),(1,1),(2,0)]</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pclose</span></span>\n<span class="line"><span style="color:#FFCB6B;">---------------------</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">))</span></span></code></pre></div><p>下面的语句示例展示了如何使用 PostgreSQL <code>pclose()</code> 函数将路径 <code>path &#39;((0,0),(1,1),(2,0))&#39;</code> 转为闭合形式。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> pclose(</span><span style="color:#C792EA;">path</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">((0,0),(1,1),(2,0))</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pclose</span></span>\n<span class="line"><span style="color:#FFCB6B;">---------------------</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">))</span></span></code></pre></div><p>这里，因为 <code>path &#39;((0,0),(1,1),(2,0))&#39;</code> 是闭合的，所以直接返回了它。</p>',17),n=[p];function t(c,r,C,d,i,y){return a(),o("div",null,n)}const h=s(l,[["render",t]]);export{F as __pageData,h as default};
