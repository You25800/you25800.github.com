import{_ as s,o as a,c as e,R as l}from"./chunks/framework.333b51ca.js";const h=JSON.parse('{"title":"PostgreSQL setval() 函数","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/ref/setval.md","filePath":"database/postgreSQL/ref/setval.md","lastUpdated":1690337946000}'),n={name:"database/postgreSQL/ref/setval.md"},o=l(`<h1 id="postgresql-setval-函数" tabindex="-1">PostgreSQL setval() 函数 <a class="header-anchor" href="#postgresql-setval-函数" aria-label="Permalink to &quot;PostgreSQL setval() 函数&quot;">​</a></h1><p>PostgreSQL <code>setval()</code> 函数重置指定序列的当前值，并返回指定的值。</p><h2 id="setval-语法" tabindex="-1"><code>setval()</code> 语法 <a class="header-anchor" href="#setval-语法" aria-label="Permalink to &quot;\`setval()\` 语法&quot;">​</a></h2><p>这里是 PostgreSQL <code>setval()</code> 函数的语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">setval(sequence_name </span><span style="color:#C792EA;">TEXT</span><span style="color:#A6ACCD;">, current_value </span><span style="color:#C792EA;">BIGINT</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BIGINT</span></span></code></pre></div><p>或</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">setval(sequence_name </span><span style="color:#C792EA;">TEXT</span><span style="color:#A6ACCD;">, current_value </span><span style="color:#C792EA;">BIGINT</span><span style="color:#A6ACCD;">, is_called </span><span style="color:#C792EA;">BOOLEAN</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BIGINT</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><p><em><code>sequence_name</code></em></p><p>必需的。 序列的名称。</p></li><li><p><em><code>current_value</code></em></p><p>必需的。 为序列指定的当前值。</p></li><li><p><em><code>is_called</code></em></p><p>可选的。 是否调用指定的当前值。如果为 <code>true</code>，则设置的当前值已被使用；如果为 <code>false</code>，则设置的当前值未被使用。默认值为 <code>true</code>。</p></li></ul><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>PostgreSQL <code>setval()</code> 函数返回第二个参数的值，即 <code>current_value</code>。</p><h2 id="setval-示例" tabindex="-1"><code>setval()</code> 示例 <a class="header-anchor" href="#setval-示例" aria-label="Permalink to &quot;\`setval()\` 示例&quot;">​</a></h2><p>首先，让我们使用 <code>CREATE SEQUENCE</code> 语句创建一个简单的序列生成器 <code>my_sequence</code>：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">DROP</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">SEQUENCE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">IF</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">EXISTS</span><span style="color:#A6ACCD;"> my_sequence;</span></span>
<span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">SEQUENCE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">my_sequence</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">START</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><p>这里，我们创建了一个名称为 <code>my_sequence</code> 序列生成器，它的起始值是 100。</p><p>然后，让我们使用 PostgreSQL <a href="./nextval.html"><code>nextval()</code></a> 函数将序列 <code>my_sequence</code> 前进一位并返回最新的值：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> nextval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_sequence</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nextval</span></span>
<span class="line"><span style="color:#FFCB6B;">---------</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">100</span></span></code></pre></div><p>然后，让我们使用下面的语句将序列 <code>my_sequence</code> 的当前的值设置为 200，</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> setval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_sequence</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">setval</span></span>
<span class="line"><span style="color:#FFCB6B;">--------</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">200</span></span></code></pre></div><p>让我们使用 <a href="./nextval.html">PostgreSQL <code>nextval()</code> 函数</a> 获取序列 <code>my_sequence</code> 的下一个值：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> nextval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_sequence</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nextval</span></span>
<span class="line"><span style="color:#FFCB6B;">---------</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">201</span></span></code></pre></div><p>这里，由于前面我们使用了 <code>setval()</code> 函数将序列的当前值设置为 200，因此，此处的 <code>nextval()</code> 函数返回了 201。</p><p>当然，我们也可以让序列 <code>my_sequence</code> 从 200 开始，而不是从 201 开始，请使用下面的语句：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> setval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_sequence</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">, false);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">setval</span></span>
<span class="line"><span style="color:#FFCB6B;">--------</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">200</span></span></code></pre></div><p>让我们使用 PostgreSQL <code>nextval()</code> 函数获取序列 <code>my_sequence</code> 的下一个值：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> nextval(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my_sequence</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nextval</span></span>
<span class="line"><span style="color:#FFCB6B;">---------</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">200</span></span></code></pre></div>`,31),p=[o];function t(c,r,C,i,d,y){return a(),e("div",null,p)}const u=s(n,[["render",t]]);export{h as __pageData,u as default};
