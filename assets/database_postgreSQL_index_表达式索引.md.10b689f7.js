import{_ as s,o as a,c as n,R as l}from"./chunks/framework.333b51ca.js";const i=JSON.parse('{"title":"PostgreSQL 表达式索引","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/index/表达式索引.md","filePath":"database/postgreSQL/index/表达式索引.md","lastUpdated":1689834507000}'),o={name:"database/postgreSQL/index/表达式索引.md"},p=l(`<h1 id="postgresql-表达式索引" tabindex="-1">PostgreSQL 表达式索引 <a class="header-anchor" href="#postgresql-表达式索引" aria-label="Permalink to &quot;PostgreSQL 表达式索引&quot;">​</a></h1><p>本文介绍在 PostgreSQL 中如何创建表达式索引。</p><p>除了在列上创建索引， PostgreSQL 允许您在基于表中的一列或者多列的表达上是创建索引，这称为表达式索引。</p><p>请注意，表达式上的索引维护起来非常昂贵，因为 PostgreSQL 必须在<a href="/database/postgreSQL/base/INSTER.html">插入</a>或<a href="/database/postgreSQL/base/UPDATE.html">更新</a>每一行时评估每一行的表达式，并将结果用于索引。因此，只有当检索速度比插入和更新速度更重要时，您才应该在表达式上使用索引。</p><h2 id="postgresql-表达式索引语法" tabindex="-1">PostgreSQL 表达式索引语法 <a class="header-anchor" href="#postgresql-表达式索引语法" aria-label="Permalink to &quot;PostgreSQL 表达式索引语法&quot;">​</a></h2><p>要创建表达式索引，请遵循如下语法：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">INDEX</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">index_name</span></span>
<span class="line"><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> table_name ( (expression) );</span></span></code></pre></div><p>解释：</p><ul><li>创建表达式索引和创建普通索引的语法基本相同，只是由表达式代替了列名。</li><li>表达式一般通过圆括号包含起来。如果表达式只是一个函数调用，则可以省率圆括号。</li><li><code>index_name</code> 为索引名称。 您可以省率索引名称，并且 PostgreSQL 会自动生成一个。</li></ul><p>一旦定义了索引表达式，当定义索引的表达式出现在 <a href="/database/postgreSQL/base/WHERE.html"><code>WHERE</code></a> 子句或 <a href="/database/postgreSQL/base/ORDER_BY.html"><code>ORDER BY</code></a> SQL 语句的子句中时，PostgreSQL 将考虑使用该索引。</p><h2 id="postgresql-表达式索引示例" tabindex="-1">PostgreSQL 表达式索引示例 <a class="header-anchor" href="#postgresql-表达式索引示例" aria-label="Permalink to &quot;PostgreSQL 表达式索引示例&quot;">​</a></h2><p>下面通过 <a href="/database/sakila/">PostgreSQL Sakila 示例数据库</a>中的 <a href="/database/sakila/客户表.html"><code>customer</code></a> 表来演示 PostgreSQL 表达式索引。</p><p>下面是 <code>customer</code> 表的部分定义：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Table</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">public.customer</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Column</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">Type</span><span style="color:#A6ACCD;">             </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Collation</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Nullable</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                    </span><span style="color:#FFCB6B;">Default</span></span>
<span class="line"><span style="color:#FFCB6B;">-------------+-----------------------------+-----------+----------+-----------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">customer_id</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">integer</span><span style="color:#A6ACCD;">                     </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">nextval(</span><span style="color:#FFCB6B;">&#39;customer_customer_id_seq&#39;</span><span style="color:#82AAFF;">:</span><span style="color:#A6ACCD;">:regclass)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">store_id</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">smallint</span><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">first_name</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">character</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">varying</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">45</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">last_name</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">character</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">varying</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">45</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">email</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">character</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">varying</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">50</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">address_id</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">smallint</span><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">activebool</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span><span style="color:#A6ACCD;">                     </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">create_date</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">date</span><span style="color:#A6ACCD;">                        </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">not</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">&#39;now&#39;</span><span style="color:#82AAFF;">:</span><span style="color:#A6ACCD;">:text::date</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">last_update</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">timestamp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">without</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">time</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zone</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">now</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;"> active      | integer                     |           |          |</span></span>
<span class="line"><span style="color:#A6ACCD;">Indexes:</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;customer_pkey&quot; PRIMARY KEY, btree </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">customer_id</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">&quot;idx_fk_address_id&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">btree</span><span style="color:#A6ACCD;"> (address_id)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">&quot;idx_fk_store_id&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">btree</span><span style="color:#A6ACCD;"> (store_id)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">&quot;idx_last_name&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">btree</span><span style="color:#A6ACCD;"> (last_name)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">...</span></span></code></pre></div><p><code>customer</code> 表中有一个为 <code>last_name</code> 列定义的 B 树索引 <code>idx_last_name</code>。以下 <a href="/database/postgreSQL/databaseAndTable/EXPLAIN.html"><code>EXPLAIN</code></a> 语句展示查询查找姓氏为 <code>Adam</code> 的客户时，PostgreSQL 使用 <code>idx_last_name</code> 索引：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">EXPLAIN</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> customer</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> last_name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Adam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">QUERY</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PLAN</span></span>
<span class="line"><span style="color:#FFCB6B;">-------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Index</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Scan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">idx_last_name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">customer</span><span style="color:#A6ACCD;">  (cost=0.28..8.29 </span><span style="color:#C3E88D;">rows=</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">width=</span><span style="color:#F78C6C;">70</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Index</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Cond:</span><span style="color:#A6ACCD;"> ((last_name)::text = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Adam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::text)</span></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rows</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>但是，当查找姓氏为 <code>adam</code> 小写的客户时，PostgreSQL 无法利用索引进行查找：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">EXPLAIN</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> customer</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LOWER</span><span style="color:#A6ACCD;">(last_name) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">adam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">QUERY</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PLAN</span></span>
<span class="line"><span style="color:#FFCB6B;">----------------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Seq</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Scan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">customer</span><span style="color:#A6ACCD;">  (cost=0.00..16.98 </span><span style="color:#C3E88D;">rows=</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">width=</span><span style="color:#F78C6C;">70</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Filter:</span><span style="color:#A6ACCD;"> (lower((last_name)::text) = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">adam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::text)</span></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rows</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>为了提高 <a href="/database/postgreSQL_ref/lower.html"><code>LOWER()</code></a> 函数的查询效率，你可以定义一个这样的索引表达式：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">INDEX</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ON</span><span style="color:#A6ACCD;"> customer(</span><span style="color:#82AAFF;">LOWER</span><span style="color:#A6ACCD;">(last_name));</span></span></code></pre></div><p>现在，再次查看上面语句执行计划，</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">EXPLAIN</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> customer</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LOWER</span><span style="color:#A6ACCD;">(last_name) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">adam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">QUERY</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PLAN</span></span>
<span class="line"><span style="color:#FFCB6B;">---------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Bitmap</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Heap</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Scan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">customer</span><span style="color:#A6ACCD;">  (cost=4.30..10.83 </span><span style="color:#C3E88D;">rows=</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">width=</span><span style="color:#F78C6C;">70</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">Recheck</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Cond:</span><span style="color:#A6ACCD;"> (lower((last_name)::text) = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">adam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::text)</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">-&gt;</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">Bitmap</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Index</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Scan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">customer_lower_idx</span><span style="color:#A6ACCD;">  (cost=0.00..4.30 </span><span style="color:#C3E88D;">rows=</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">width=</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#FFCB6B;">Index</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Cond:</span><span style="color:#A6ACCD;"> (lower((last_name)::text) = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">adam</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">::text)</span></span>
<span class="line"><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rows</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>您会发现， PostgreSQL 优化器使用了索引。</p><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>PostgreSQL 允许您在基于表中的一列或者多列的表达上是创建索引，这就是表达式索引。</p>`,28),e=[p];function t(c,r,C,y,A,D){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{i as __pageData,d as default};
