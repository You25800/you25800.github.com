import{_ as s,o as a,c as l,R as n}from"./chunks/framework.333b51ca.js";const u=JSON.parse('{"title":"PostgreSQL PRIMARY KEY 主键","description":"","frontmatter":{},"headers":[],"relativePath":"database/postgreSQL/databaseAndTable/主键.md","filePath":"database/postgreSQL/databaseAndTable/主键.md","lastUpdated":1689061386000}'),e={name:"database/postgreSQL/databaseAndTable/主键.md"},o=n(`<h1 id="postgresql-primary-key-主键" tabindex="-1">PostgreSQL PRIMARY KEY 主键 <a class="header-anchor" href="#postgresql-primary-key-主键" aria-label="Permalink to &quot;PostgreSQL PRIMARY KEY 主键&quot;">​</a></h1><p>在本文中，我们介绍了什么是主键、主键的规则以及如何在 PostgreSQL 中使用主键。</p><p>在关系数据库中，主键是能够唯一标识表中的每一行的一个列或者多个列的组合。</p><h2 id="postgresql-主键规则" tabindex="-1">PostgreSQL 主键规则 <a class="header-anchor" href="#postgresql-主键规则" aria-label="Permalink to &quot;PostgreSQL 主键规则&quot;">​</a></h2><p>在 PostgreSQL 中，主键需要遵循以下规则：</p><ul><li>主键是定义在表上的。一个表不强制定义主键，但最多只能定义一个主键。</li><li>主键可以包含一个列或者多个列。</li><li>主键列的值必须是唯一的。如果主键包含多个列，则这些列的值组合起来必须是唯一的。</li><li>主键列中不能包含 <code>NULL</code> 值。</li></ul><p>主键相当于 <a href="./唯一约束.html"><code>UNION</code></a> 约束和 <a href="./NOT_NULL.html"><code>NOT NULL</code></a> 约束的组合。</p><p>如果不遵循上面的规则，则可能会引发以下的错误。</p><ul><li>如果要定义了多个主键，会返回错误：<code>ERROR 1068 (42000): Multiple primary key defined</code>。</li><li>如果插入或者更新时有重复的主键值，则会返回类似的错误：<code>ERROR 1062 (23000): Duplicate entry &#39;1&#39; for key &#39;users.PRIMARY&#39;</code>。</li><li>如果插入了 <code>NULL</code> 值，则会返回类似的错误：<code>ERROR 1048 (23000): Column &#39;id&#39; cannot be null</code>。</li></ul><h2 id="定义主键" tabindex="-1">定义主键 <a class="header-anchor" href="#定义主键" aria-label="Permalink to &quot;定义主键&quot;">​</a></h2><p>我们可以在创建表时定义主键。如下：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">users</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  id </span><span style="color:#C792EA;">INTEGER</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">VARCHAR</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">45</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>这里定义了 <code>id</code> 列为主键。</p><p>上面这种方式适合只有一列作为主键的情况，如果主键包含多列，请使用下面的方式:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">users</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  com_id </span><span style="color:#C792EA;">INTEGER</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  user_number </span><span style="color:#C792EA;">INTEGER</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">VARCHAR</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">45</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">(com_id, user_number)</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>这里定义一个主键，它包含 <code>com_id</code> 和 <code>user_number</code> 2 列。</p><h2 id="添加主键" tabindex="-1">添加主键 <a class="header-anchor" href="#添加主键" aria-label="Permalink to &quot;添加主键&quot;">​</a></h2><p>如果我们创建表的时候没有设置主键，而我们想为其添加一个主键，请使用下面的方式：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">ALTER</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> users</span></span>
<span class="line"><span style="color:#F78C6C;">ADD</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">(id);</span></span></code></pre></div><p>这里为 <code>users</code> 表添加了主键，该主键包括 <code>id</code> 列。</p><h2 id="删除主键" tabindex="-1">删除主键 <a class="header-anchor" href="#删除主键" aria-label="Permalink to &quot;删除主键&quot;">​</a></h2><p>如果我们想删除一个表上主键，请执行以下的步骤：</p><ol><li><p>使用 <code>\\d</code> 命令查找主键约束的名称：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">\\d users</span></span></code></pre></div><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Table &quot;public.users&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Column |         Type          | Collation | Nullable | Default</span></span>
<span class="line"><span style="color:#A6ACCD;">--------+-----------------------+-----------+----------+---------</span></span>
<span class="line"><span style="color:#A6ACCD;">id     | integer               |           | not null |</span></span>
<span class="line"><span style="color:#A6ACCD;">name   | character varying(45) |           |          |</span></span>
<span class="line"><span style="color:#A6ACCD;">Indexes:</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;users_pkey&quot; PRIMARY KEY, btree (id)</span></span></code></pre></div><p>你可以在最后一行发现主键约束的名称是 <code>users_pkey</code>。</p></li><li><p>使用以下语句删除主键约束：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">ALTER</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> users</span></span>
<span class="line"><span style="color:#F78C6C;">DROP</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">CONSTRAINT</span><span style="color:#A6ACCD;"> users_pkey;</span></span></code></pre></div></li></ol><h2 id="如何产生主键值" tabindex="-1">如何产生主键值 <a class="header-anchor" href="#如何产生主键值" aria-label="Permalink to &quot;如何产生主键值&quot;">​</a></h2><p>通常在业务系统中，我们不使用业务列作为主键，虽然它们也是唯一的。我们一般使用单独的列作为主键，这主要是出于以下两方面的原因：</p><ol><li>保护业务数据</li><li>方便这些业务列的修改</li></ol><p>为了生成唯一的主键值，我们通常采用以下方法：</p><ol><li><p>将主键列设置为 <a href="./SERIAL自增列.html"><code>SERIAL自增列</code></a>。</p><p>声明为 <code>SERIAL</code> 的列会自动生成连续的整数值。以下语句使用 <code>SERIAL</code> 创建一个主键列。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">users</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  id </span><span style="color:#C792EA;">SERIAL</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">VARCHAR</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">45</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div></li><li><p>将主键列设置为 <a href="/database/postgreSQL/dataType/UUID.html"><code>UUID</code></a> 类型。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">users</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  id UUID </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEFAULT</span><span style="color:#A6ACCD;"> gen_random_uuid</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">VARCHAR</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">45</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span></code></pre></div><p>这里，将主键列设置的数据类型设置为 <code>UUID</code>，并为它自定默认值 <code>gen_random_uuid()</code>。</p></li></ol><h2 id="主键-vs-唯一索引" tabindex="-1">主键 vs 唯一索引 <a class="header-anchor" href="#主键-vs-唯一索引" aria-label="Permalink to &quot;主键 vs 唯一索引&quot;">​</a></h2><p>主键和唯一索引都要求值是唯一的，但它们之间存在一些不同：</p><ul><li>一个表中只能定义一个主键，但是能定义多个唯一索引。</li><li>主键中的值不能为 <code>NULL</code>，而索引中的值可以为 <code>NULL</code>。</li></ul><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>在本文中，我们学习了什么是主键、主键的规则以及如何在 PostgreSQL 中使用主键。本文的要点如下：</p><ul><li>一个表最多只能定义一个主键。</li><li>主键可以包含一个列或者多个列。</li><li>主键列的值必须是唯一的。如果主键包含多个列，则这些列的值组合起来必须是唯一的。</li><li>主键列中不能包含 <code>NULL</code> 值。</li></ul>`,34),p=[o];function t(c,r,C,A,i,d){return a(),l("div",null,p)}const h=s(e,[["render",t]]);export{u as __pageData,h as default};
