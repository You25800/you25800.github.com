import{_ as a,o as e,c as t,R as s}from"./chunks/framework.333b51ca.js";const u=JSON.parse('{"title":"客户表 customer","description":"","frontmatter":{},"headers":[],"relativePath":"database/sakila/客户表.md","filePath":"database/sakila/客户表.md","lastUpdated":1688717707000}'),n={name:"database/sakila/客户表.md"},r=s(`<h1 id="客户表-customer" tabindex="-1">客户表 customer <a class="header-anchor" href="#客户表-customer" aria-label="Permalink to &quot;客户表 customer&quot;">​</a></h1><p>本文介绍了 Sakila 数据库中的 country 表的表结构以及与其他表的关系。</p><p><code>customer</code> 表包含所有客户的列表。</p><p><code>customer</code> 表中定义了外键引用 <a href="https://www.sjkjc.com/sakila/table-address/" target="_blank" rel="noreferrer"><code>address</code></a> 表和 <a href="https://www.sjkjc.com/sakila/table-store/" target="_blank" rel="noreferrer"><code>store</code></a> 表的主键。</p><p><a href="https://www.sjkjc.com/sakila/table-payment/" target="_blank" rel="noreferrer"><code>payment</code></a> 表和 <a href="https://www.sjkjc.com/sakila/table-rental/" target="_blank" rel="noreferrer"><code>rental</code></a> 表引用了 <code>customer</code> 表的数据。</p><h2 id="表结构" tabindex="-1">表结构 <a class="header-anchor" href="#表结构" aria-label="Permalink to &quot;表结构&quot;">​</a></h2><p><code>customer</code> 表结构如下：</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| Field       | Type              | Null | Key | Default           | Extra                                         |</span></span>
<span class="line"><span style="color:#A6ACCD;">+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| customer_id | smallint unsigned | NO   | PRI | NULL              | auto_increment                                |</span></span>
<span class="line"><span style="color:#A6ACCD;">| store_id    | tinyint unsigned  | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| first_name  | varchar(45)       | NO   |     | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| last_name   | varchar(45)       | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| email       | varchar(50)       | YES  |     | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| address_id  | smallint unsigned | NO   | MUL | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| active      | tinyint(1)        | NO   |     | 1                 |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| create_date | datetime          | NO   |     | NULL              |                                               |</span></span>
<span class="line"><span style="color:#A6ACCD;">| last_update | timestamp         | YES  |     | CURRENT_TIMESTAMP | DEFAULT_GENERATED on update CURRENT_TIMESTAMP |</span></span>
<span class="line"><span style="color:#A6ACCD;">+-------------+-------------------+------+-----+-------------------+-----------------------------------------------+</span></span></code></pre></div><h2 id="字段说明" tabindex="-1">字段说明 <a class="header-anchor" href="#字段说明" aria-label="Permalink to &quot;字段说明&quot;">​</a></h2><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td><code>customer_id</code></td><td>用于唯一标识表中每个客户的代理主键。</td></tr><tr><td><code>store_id</code></td><td>标识客户“附近商店”的外键。顾客不仅从这家店租借，而且他们还在这家店购物。</td></tr><tr><td><code>first_name</code></td><td>客户的名字。</td></tr><tr><td><code>last_name</code></td><td>客户姓氏。</td></tr><tr><td><code>email</code></td><td>客户电子邮件地址。</td></tr><tr><td><code>address_id</code></td><td>标识 <a href="https://www.sjkjc.com/sakila/table-address/" target="_blank" rel="noreferrer"><code>address</code></a> 表中客户地址的外键 。</td></tr><tr><td><code>active</code></td><td>表示客户是否为活跃客户。将此设置 <code>FALSE</code> 为可以替代物理删除客户。大多数查询应该带上 <code>WHERE active = TRUE</code> 子句。</td></tr><tr><td><code>create_date</code></td><td>客户加入系统的日期。此日期是在 \`INSERT 时使用触发器自动设置的。</td></tr><tr><td><code>last_update</code></td><td>该行的创建时间或最近更新时间。</td></tr></tbody></table>`,10),d=[r];function o(c,l,p,i,_,m){return e(),t("div",null,d)}const A=a(n,[["render",o]]);export{u as __pageData,A as default};
